# –ê–ª–≥–æ—Ä–∏—Ç–º —ñ–∑ —á–∞—Å–æ–≤–æ—é —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—é 
# ùëÇ(1) ‚Äî —Ü–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω–∏–π —á–∞—Å. –§—É–Ω–∫—Ü—ñ—è get_first_item –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–µ—Ä—à–µ —á–∏—Å–ª–æ —Å–ø–∏—Å–∫—É.

def get_first_item(items):
    return items[0];
# –ó–∞–≤–∂–¥–∏ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –æ–¥–Ω–∞ –æ–ø–µ—Ä–∞—Ü—ñ—è, –Ω–µ–∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ä–æ–∑–º—ñ—Ä—É —Å–ø–∏—Å–∫—É

print(get_first_item([1, 2, 3, 4, 5]))


# –ê–ª–≥–æ—Ä–∏—Ç–º —ñ–∑ —á–∞—Å–æ–≤–æ—é —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—é ùëÇ(ùëõ) –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ø–æ —Å–ø–∏—Å–∫—É —á–∏—Å–µ–ª —ñ –¥—Ä—É–∫—É—î –∫–æ–∂–Ω–µ —á–∏—Å–ª–æ,
# –∞ –æ—Ç–∂–µ, –∫–æ–∂–Ω–µ —á–∏—Å–ª–æ —É —Å–ø–∏—Å–∫—É –æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è –æ–¥–∏–Ω —Ä–∞–∑.
# –¢–æ–±—Ç–æ, —è–∫—â–æ –≤ –Ω–∞—Å —î —Å–ø–∏—Å–æ–∫ –∑ 10 —á–∏—Å–ª–∞–º–∏, –∞–ª–≥–æ—Ä–∏—Ç–º –≤–∏–∫–æ–Ω–∞—î 10 –æ–ø–µ—Ä–∞—Ü—ñ–π,
# –∞ —è–∫—â–æ —Å–ø–∏—Å–æ–∫ –º—ñ—Å—Ç–∏—Ç—å 1000 —á–∏—Å–µ–ª ‚Äî –∞–ª–≥–æ—Ä–∏—Ç–º –≤–∏–∫–æ–Ω–∞—î 1000 –æ–ø–µ—Ä–∞—Ü—ñ–π.

def print_all_items(items):
  for item in items:
    print(item);
        
# –ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü—ñ–π –ø—Ä—è–º–æ –ø—Ä–æ–ø–æ—Ä—Ü—ñ–π–Ω–∞ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —É —Å–ø–∏—Å–∫—É

print_all_items([1, 2, 3, 4, 5])


# –ü—Ä–∏–∫–ª–∞–¥–æ–º –∞–ª–≥–æ—Ä–∏—Ç–º—É –∑ —á–∞—Å–æ–≤–æ—é —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—é 
# ùëÇ(ùëõ^2) –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –≤—Å—ñ—Ö –ø–∞—Ä –≤–µ–∫—Ç–æ—Ä—ñ–≤ —É —Å–ø–∏—Å–∫—É, –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–æ–≥–æ, —á–∏ —î –≤–æ–Ω–∏ –æ—Ä—Ç–æ–≥–æ–Ω–∞–ª—å–Ω—ñ. 
# –ù–∞–≥–∞–¥–∞—î–º–æ, —â–æ –≤–µ–∫—Ç–æ—Ä–∏ –≤–≤–∞–∂–∞—é—Ç—å—Å—è –æ—Ä—Ç–æ–≥–æ–Ω–∞–ª—å–Ω–∏–º–∏, —è–∫—â–æ —ó—Ö —Å–∫–∞–ª—è—Ä–Ω–∏–π –¥–æ–±—É—Ç–æ–∫ –¥–æ—Ä—ñ–≤–Ω—é—î –Ω—É–ª—é. 


def dot_product(v1, v2):
    return sum(x*y for x, y in zip(v1, v2))

def get_orthogonal_pairs(vectors):
  n = len(vectors)
  orthogonal_pairs = []
  
  for i in range(n):
    for j in range(i+1, n):
      if dot_product(vectors[i], vectors[j]) == 0:
        orthogonal_pairs.append((i, j))
        
  return orthogonal_pairs

vectors = [[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 1, 1]]
print(get_orthogonal_pairs(vectors))


